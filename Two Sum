class Solution {
    //O(n) solution
    public int[] twoSum(int[] nums, int target) {
        int len=nums.length;
        int[] arr=new int[2];
        HashMap<Integer,Integer> hm=new HashMap<Integer,Integer>();
        for(int i=0;i<len;i++){
            int temp=target-nums[i];
            if(hm.containsKey(temp)){
                arr[0]=hm.get(temp);
                arr[1]=i;
                return arr;
            }
            else
                hm.put(nums[i],i);
        }
        return arr;
    }
    /* O(n^2) solution
    public int[] twoSum(int[] nums, int target) {
        int len=nums.length;
        int[] arr=new int[2];
        for(int i=0;i<len;i++){
            for(int j=0;j<len;j++){
                if(nums[i]+nums[j]==target){
                    arr[0]=i;
                    arr[1]=j;
                    return arr;
                }
                    
            }
        }
        return arr;
    }*/
}
